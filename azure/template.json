{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "configName": {
      "type": "string",
      "defaultValue": "SFA.DAS.EarlyConnect.Jobs"
    },
    "deployStubFunctions": {
      "type": "bool",
      "defaultValue": false
    },
    "aspSize": {
      "type": "string",
      "defaultValue": "1"
    },
    "aspInstances": {
      "type": "int",
      "defaultValue": 2
    },
    "appServicePlanTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "configurationStorageConnectionString": {
      "type": "securestring"
    },
    "policyRules": {
      "type": "array",
      "defaultValue": [
        
      ],
      "metadata": {
        "description": "A list of management policy rules"
      }
    },
    "storageKind": {
      "type": "string"
    },
    "functionsExtensionVersion": {
      "type": "string",
      "defaultValue": "~3"
    },
    "resourceGroupLocation": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "sharedEnvVirtualNetworkName": {
      "type": "string"
    },
    "subnetServiceEndpointList": {
      "type": "array"
    },
    "subnetDelegations": {
      "type": "array"
    },
    "workerAccessRestrictions": {
      "type": "array"
    },
    "sharedEnvResourceGroup": {
      "type": "string"
    },
    "subnetObject": {
      "type": "object"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourcePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "appServicePlanName": "[concat(variables('resourcePrefix'),'-asp')]",
    "importFunctionAppName": "[concat(variables('resourcePrefix'),'-import-fa')]",
    "storageAccountName": "[concat('das',toLower(parameters('resourceEnvironmentName')),parameters('serviceName'),'str')]",
    "storageContainerNames": [
      "import-StudentData"
    ],
    "resourceGroupName": "[concat(variables('resourcePrefix'), '-rg')]"
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "location": "[parameters('resourceGroupLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {
        
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('subnetObject').name, '-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('sharedEnvVirtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetObject').name]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('subnetObject').addressSpace]"
          },
          "serviceEndpointList": {
            "value": "[parameters('subnetServiceEndpointList')]"
          },
          "delegations": {
            "value": "[parameters('subnetDelegations')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('aspSize')]"
          },
          "aspInstances": {
            "value": "[parameters('aspInstances')]"
          },
          "nonASETier": {
            "value": "[parameters('appServicePlanTier')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('importFunctionAppName'), '-application-insights-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('importFunctionAppName')]"
          },
          "attachedService": {
            "value": "[variables('importFunctionAppName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageKind": {
            "value": "[parameters('storageKind')]"
          },
          "allowSharedKeyAccess": {
            "value": true
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '-', variables('storageContainerNames')[copyIndex()], '-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-container.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "containerName": {
            "value": "[variables('storageContainerNames')[copyIndex()]]"
          }
        }
      },
      "copy": {
        "count": "[length(variables('storageContainerNames'))]",
        "name": "storageContainerCopy"
      },
      "dependsOn": [
        "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '-storage-management-policy-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-management-policy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "policyRules": {
            "value": "[parameters('policyRules')]"
          }
        }
      },
      "dependsOn": [
        "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('importFunctionAppName'), '-', parameters('utcValue'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionAppName": {
            "value": "[variables('importFunctionAppName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[variables('resourceGroupName')]"
          },
          "subnetResourceId": {
            "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('workerAccessRestrictions')]"
          },
          "functionAppAppSettings": {
            "value": {
              "array": [
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[reference(concat(variables('storageAccountName'), '-', parameters('utcValue'))).outputs.storageConnectionString.value]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('importFunctionAppName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "FUNCTIONS_EXTENSION_VERSION",
                  "value": "[parameters('functionsExtensionVersion')]"
                },
                {
                  "name": "ConfigName",
                  "value": "[parameters('configName')]"
                },
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "AppName",
                  "value": "SFA.DAS.EarlyConnect.Jobs"
                },
                {
                  "name": "FUNCTIONS_WORKER_RUNTIME",
                  "value": "dotnet"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "WEBSITE_RUN_FROM_PACKAGE",
                  "value": "1"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]",
        "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]"
      ]
    }
  ],
  "outputs": {
    "ImportFunctionAppName": {
      "type": "string",
      "value": "[variables('importFunctionAppName')]"
    },
    "ResourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    }
  }
}